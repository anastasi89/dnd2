(()=>{"use strict";function t(){const t=document.querySelectorAll(".column"),e=[];t.forEach((t=>{const n=t.dataset.columnId,a=t.querySelector("h2").textContent.trim(),d=[];t.querySelectorAll(".card").forEach((t=>{const e=t.dataset.cardId,n=t.querySelector("p").textContent.trim();d.push({id:e,content:n})})),e.push({id:n,title:a,cards:d})})),localStorage.setItem("boardState",JSON.stringify(e))}window.onload=function(){!function(){const t=document.querySelector(".board"),e=JSON.parse(localStorage.getItem("boardState"));e&&(t.innerHTML="",e.forEach((e=>{const n=`\n        <div class="column" data-column-id="${e.id}">\n          <h2>${e.title}</h2>\n\n          <ul class="column-cards">\n            ${e.cards.map((t=>`\n              <li class="card" draggable="true" data-card-id="${t.id}">\n              <button type="button" class="delete-card-button">&#x2715;</button>\n                <p class="card-text">${t.content}</p>\n              </li>\n            `)).join("")}\n          </ul>\n\n          <a class="add-card-link">+ Add another card</a>\n\n          <div class="add-card-section visually-hidden">\n            <textarea class="textarea"></textarea>\n\n            <button type="button" class="add-card-button">Add Card</button>\n            <button type="button" class="cancel-card-button"></button>\n          </div>\n        </div>\n      `;t.insertAdjacentHTML("beforeend",n)})))}()};const e=document.querySelector(".board");let n;e.addEventListener("click",(e=>{const n=e.target,a=n.closest(".column"),d=a.querySelector(".add-card-link"),r=a.querySelector(".column-cards"),c=a.querySelector(".add-card-section"),o=a.querySelector(".textarea"),l=a.querySelector(".add-card-button"),s=a.querySelector(".cancel-card-button");n===d&&(c.classList.remove("visually-hidden"),l.addEventListener("click",(()=>{const e=o.value.trim();if(e){const n=`\n            <div class="card" draggable="true" data-card-id="${Math.floor(1e6*Math.random())}">\n            <button type="button" class="delete-card-button">&#x2715;</button>\n              <p class="card-text">${e}</p>\n            </div>\n          `;r.insertAdjacentHTML("beforeend",n),t(),o.value="",c.classList.add("visually-hidden")}})),s.addEventListener("click",(()=>{o.value="",c.classList.add("visually-hidden")})));a.querySelectorAll(".delete-card-button").forEach((e=>{if(n===e){e.closest(".card").remove(),t()}}))}));document.querySelector("body");e.addEventListener("dragstart",(e=>{n=e.target,n.classList.add("is-dragging");document.querySelectorAll(".column-cards").forEach((e=>{e.addEventListener("dragover",(n=>{n.preventDefault();const a=function(t,e){const n=t.querySelectorAll(".card:not(.is-dragging)");let a=null,d=Number.NEGATIVE_INFINITY;return n.forEach((t=>{const{top:n}=t.getBoundingClientRect(),r=e-n;r<0&&r>d&&(d=r,a=t)})),a}(e,n.clientY),d=document.querySelector(".is-dragging");a?e.insertBefore(d,a):e.appendChild(d),t()}))}))})),e.addEventListener("dragend",(()=>{n.classList.remove("is-dragging")}))})();